package com.allteran.pizzamira.ui.order;

import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.fragment.app.Fragment;

import android.text.Editable;
import android.text.Selection;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.Toast;

import com.allteran.pizzamira.R;

import org.jetbrains.annotations.NotNull;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link DeliveryDetailsFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class DeliveryDetailsFragment extends Fragment {
    private static final String NO_DATA_MESSAGE = "Внесите данные";

    private EditText mInputStreet;
    private EditText mInputBuilding;
    private EditText mInputEntrance;
    private EditText mInputIntercom;
    private EditText mInputApp;

    private EditText mInputFirstName;
    private EditText mInputSecondName;
    private EditText mInputPhone;

    private EditText mInputChange;

    private RadioButton mCardRadio;
    private RadioButton mCashRadio;

    private AppCompatButton mConfirmButton;

    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    public DeliveryDetailsFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment AddAddressFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static DeliveryDetailsFragment newInstance(String param1, String param2) {
        DeliveryDetailsFragment fragment = new DeliveryDetailsFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_delivery_details, container, false);
    }

    @Override
    public void onViewCreated(@NonNull @NotNull View view, @Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        mInputStreet = view.findViewById(R.id.input_street);
        mInputBuilding = view.findViewById(R.id.input_building);
        mInputEntrance = view.findViewById(R.id.input_entrance);
        mInputIntercom = view.findViewById(R.id.input_intercom);
        mInputApp = view.findViewById(R.id.input_app);

        mInputFirstName = view.findViewById(R.id.input_first_name);
        mInputSecondName = view.findViewById(R.id.input_second_name);
        mInputPhone = view.findViewById(R.id.input_customer_phone);

        mInputChange = view.findViewById(R.id.input_change);

        mCashRadio = view.findViewById(R.id.radio_paytype_cash);
        mCardRadio = view.findViewById(R.id.radio_paytype_card);

        mConfirmButton = view.findViewById(R.id.button_confirm_delivery);

        mInputStreet.requestFocus();

        mInputPhone.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                //autogenerated
            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                //autogenerated
            }

            @Override
            public void afterTextChanged(Editable s) {
                if (!s.toString().startsWith("+7")) {
                    mInputPhone.setText("+7");
                    Selection.setSelection(mInputPhone.getText(), mInputPhone.getText().length());
                }
                //validate entered phone number
                if (s.toString().length() != 12) {
                    mInputPhone.setError("+79XXXXXXXXX");
                }
            }
        });

        mCashRadio.setOnCheckedChangeListener((buttonView, isChecked) -> mInputChange.setEnabled(isChecked));

        mConfirmButton.setOnClickListener(v -> {
            if (validateFields()) {
                Toast.makeText(getActivity(), "Its all ok", Toast.LENGTH_SHORT).show();
            }
        });

    }

    /**
     * Current method will return true every time when all fields are filled
     * This means that all field validated
     */
    private boolean validateFields() {
        if (mInputStreet.getText().toString().length() <= 3) {
            mInputStreet.setError(NO_DATA_MESSAGE);
            mInputStreet.requestFocus();
            return false;
        }
        if (mInputBuilding.getText().toString().trim().equals("")) {
            mInputBuilding.setError(NO_DATA_MESSAGE);
            mInputBuilding.requestFocus();
            return false;
        }
        if (mInputEntrance.getText().toString().trim().equals("")) {
            mInputEntrance.setError(NO_DATA_MESSAGE);
            mInputEntrance.requestFocus();
            return false;
        }
        if (mInputIntercom.getText().toString().trim().equals("")) {
            mInputIntercom.setError(NO_DATA_MESSAGE);
            mInputIntercom.requestFocus();
            return false;
        }
        if (mInputApp.getText().toString().trim().equals("")) {
            mInputApp.setError(NO_DATA_MESSAGE);
            mInputApp.requestFocus();
            return false;
        }
        if (mInputFirstName.getText().toString().length() <= 2) {
            mInputFirstName.setError(NO_DATA_MESSAGE);
            mInputFirstName.requestFocus();
            return false;
        }
        if (mInputSecondName.getText().toString().length() <= 2) {
            mInputSecondName.setError(NO_DATA_MESSAGE);
            return false;
        }
        if (mInputPhone.getText().toString().length() != 12) {
            mInputPhone.setError("+79XXXXXXXXX");
            mInputPhone.requestFocus();
            return false;
        }
        if (mCashRadio.isChecked()) {
            if (mInputChange.getText().toString().equals("")) {
                mInputChange.setError(NO_DATA_MESSAGE);
                mInputChange.requestFocus();
                return false;
            }
        }
        return true;
    }
}